events {
    worker_connections 1024;
    accept_mutex off;
}

worker_processes auto;



http {   
  map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
  }

    upstream grafana {
      server grafana:3000;
    }
    upstream orthanc {
      server orthanc:8042;
    }

    sendfile on;
    default_type application/octet-stream;
    client_max_body_size 100M;
    client_body_buffer_size 10M;
    send_timeout 600s;
    tcp_nodelay on;
    tcp_nopush on;
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=4g
                     inactive=60m use_temp_path=off;
    server {
        listen 80;
        listen [::]:80;
        server_name fhnw.ch v000563.fhnw.ch;
        server_tokens off;
        location / {
            return 301 https://v000563.fhnw.ch$request_uri;
        }
    }
 
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name v000563.fhnw.ch;
        http2 on;
        keepalive_timeout 75;
        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        resolver 1.1.1.1 8.8.8.8 valid=300s;
        resolver_timeout 10s;

        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";

        ssl_certificate /etc/letsencrypt/live/v000563.fhnw.ch/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/v000563.fhnw.ch/privkey.pem;

        root /usr/share/nginx/html;
        index index.html index.htm;

        include /etc/nginx/mime.types;

        location ~/.well-known/acme-challenge {
            allow all;
            root /var/www/html;
        }

        location / {
            try_files $uri $uri/ /index.html;
            #proxy_pass http://v000563.fhnw.ch;
        }

        location /orthanc/ {
            proxy_read_timeout 3600;
            proxy_cache my_cache;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
            expires 30d;
            proxy_pass          http://orthanc;
            proxy_redirect off;
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host   $host;
            proxy_set_header    X-Forwarded-Server $host;
            proxy_set_header    X-Forwarded-Port   $server_port;
            proxy_set_header    X-Forwarded-Proto  $scheme;
            proxy_set_header    X-Auth-Request-Redirect $request_uri;
            proxy_set_header Accept image/jpeg;
            proxy_set_header Authorization "Basic b3J0aGFuYzpvcnRoYW5j";
            rewrite /orthanc(.*) $1 break;
        }

        location /sonarqube/ {
            proxy_pass http://sonarqube:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        location /prometheus/ {
          proxy_pass http://prometheus:9090;
        } 

        location /grafana/ {
          rewrite  ^/grafana/(.*)  /$1 break;
          proxy_pass http://grafana;
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Server $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /grafana/api/live/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_pass http://grafana;
          }

        location /api/ {
            proxy_pass http://server-api:8080/server/api/;
            proxy_set_header    Host               $host;
            proxy_set_header Authorization $http_authorization;
            proxy_redirect off;
        }
    }
}

